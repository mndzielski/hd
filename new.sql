--------------------------------------------------------
--  File created - poniedzia≈Çek-czerwca-11-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table CHD_DEF_PRACY
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_DEF_PRACY" 
   (	"ID_DEF_PRACY" NUMBER, 
	"NAZWA_PRACY" VARCHAR2(100 BYTE), 
	"JEDNOSTKA" VARCHAR2(100 BYTE), 
	"NORMA_MIN_H" NUMBER, 
	"NORMA_MAX_H" NUMBER, 
	"KOSZT_JEDN_PRACY" NUMBER, 
	"CHD_ID_DEF_PRACY" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_DEF_PRACY_KEY
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_DEF_PRACY_KEY" 
   (	"CHD_ID_DEF_PRACY" NUMBER, 
	"NAZWA_PRACY" VARCHAR2(100 BYTE), 
	"ZRODLO_DANYCH" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_DEF_ZUZYCIA
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_DEF_ZUZYCIA" 
   (	"ID_DEF_ZUZYCIA" VARCHAR2(20 BYTE), 
	"NORMA_MIN_JEDN" NUMBER, 
	"NORMA_MAX_JEDN" NUMBER, 
	"CHD_ID_DEF_PRACY" NUMBER, 
	"CHD_ID_MATERIALU" NUMBER, 
	"CHD_ID_DEF_ZUZYCIA" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_DEF_ZUZYCIA_KEY
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_DEF_ZUZYCIA_KEY" 
   (	"CHD_ID_DEF_PRACY" NUMBER, 
	"NAZWA_PRACY" VARCHAR2(100 BYTE), 
	"NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
	"ZRODLO_DANYCH" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_MATERIAL
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_MATERIAL" 
   (	"ID_MATERIALU" NUMBER, 
	"NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
	"JEDNOSTKA" VARCHAR2(100 BYTE), 
	"KOSZT_JEDN" NUMBER, 
	"CHD_ID_MATERIALU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_MATERIAL_KEY
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_MATERIAL_KEY" 
   (	"CHD_ID_DEF_PRACY" NUMBER, 
	"NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
	"ZRODLO_DANYCH" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_PRACA
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_PRACA" 
   (	"ID_PRACY" NUMBER, 
	"CHD_ID_PRACOWNIKA" NUMBER, 
	"DP_PRACY" DATE, 
	"DZ_PRACY" DATE, 
	"CHD_ID_DEF_PRACY" NUMBER, 
	"KWOTA_PRACOWNIK" NUMBER, 
	"ILOSC" NUMBER, 
	"CHD_ID_MATERIALU" NUMBER, 
	"ILOSC_MATERIALU" NUMBER, 
	"CHD_ID_PRACY" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_PRACA_KEY
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_PRACA_KEY" 
   (	"CHD_ID_DEF_PRACY" NUMBER, 
	"NAZWA_PRACY" VARCHAR2(100 BYTE), 
	"NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
	"PESEL_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"ZRODLO_DANYCH" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_PRACOWNIK
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_PRACOWNIK" 
   (	"IMIE_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"NAZWISKO_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"PESEL_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"CHD_ID_PRACOWNIKA" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table CHD_PRACOWNIK_KEY
--------------------------------------------------------

  CREATE TABLE "HD2018"."CHD_PRACOWNIK_KEY" 
   (	"CHD_ID_DEF_PRACY" NUMBER, 
	"PESEL_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"ZRODLO_DANYCH" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table META_DATA
--------------------------------------------------------

CREATE TABLE "HD2018"."META_DATA_STG_EXT" 
   (	
        "NAZWA" VARCHAR2(50 BYTE), 
        "PLIK_CSV" VARCHAR2(50 BYTE), 
	      "ZRODLO_DANYCH" NUMBER,
	      "KOLUMNY" VARCHAR2(500 BYTE),
        "TABELA_DOCELOWA"  VARCHAR2(50 BYTE)
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;

Insert into META_DATA_STG_EXT(NAZWA, TABELA_DOCELOWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY) 
values ('STG_DEF_PRACY_EXT', 'STG_DEF_PRACY', 'DEF_PRACY.csv', 1, 'ID_DEF_PRACY,NAZWA_PRACY,JEDNOSTKA,NORMA_MIN_H,NORMA_MAX_H,KOSZT_JEDN_PRACY,USUNIETY');
    
Insert into META_DATA_STG_EXT(NAZWA, TABELA_DOCELOWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY) 
VALUES ('STG_DEF_ZUZYCIA_EXT', 'STG_DEF_ZUZYCIA', 'DEF_ZUZYCIA.csv', 1, 'ID_DEF_ZUZYCIA,NORMA_MIN_JEDN,NORMA_MAX_JEDN,NAZWA_PRACY,NAZWA_MATERIALU,USUNIETY');

Insert into META_DATA_STG_EXT(NAZWA, TABELA_DOCELOWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY) 
values ('STG_MATERIAL_EXT_1', 'STG_MATERIAL', 'MATERIAL_1.csv', 1, 'ID_MATERIALU,NAZWA_MATERIALU,JEDNOSTKA,USUNIETY');

Insert into META_DATA_STG_EXT(NAZWA, TABELA_DOCELOWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY) 
values ('STG_MATERIAL_EXT_2', 'STG_MATERIAL', 'MATERIAL_2.csv', 2, 'ID_MATERIALU,NAZWA_MATERIALU,KOSZT_JEDN,USUNIETY');

Insert into META_DATA_STG_EXT(NAZWA, TABELA_DOCELOWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY) 
values ('STG_PRACA_EXT', 'STG_PRACA', 'PRACA.csv', 1, 'ID_PRACY,PESEL_PRACOWNIKA,DP_PRACY,DZ_PRACY,NAZWA_PRACY,KWOTA_PRACOWNIK,ILOSC,NAZWA_MATERIALU,ILOSC_MATERIALU,USUNIETY');

Insert into META_DATA_STG_EXT(NAZWA, TABELA_DOCELOWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY) 
values ('STG_PRACOWNIK_EXT_1', 'STG_PRACOWNIK', 'PRACOWNIK_1.csv', 1, 'ID_PRACOWNIKA,IMIE_PRACOWNIKA,NAZWISKO_PRACOWNIKA,PESEL_PRACOWNIKA,USUNIETY');

Insert into META_DATA_STG_EXT(NAZWA, TABELA_DOCELOWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY) 
values ('STG_PRACOWNIK_EXT_2', 'STG_PRACOWNIK', 'PRACOWNIK_2.csv', 2, 'ID_PRACOWNIKA,PESEL_PRACOWNIKA,ADRES,USUNIETY');

CREATE SEQUENCE  "PRZYROST_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;


--------------------------------------------------------
--  DDL for Table META_DATA
--------------------------------------------------------

  CREATE TABLE "HD2018"."META_DATA" 
   (	"NAZWA" VARCHAR2(50 BYTE), 
	"NUMER_OST_ZAL_PRZYROSTU" NUMBER,
	"NUMER_OST_PRZYROSTU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table STG_DEF_PRACY
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_DEF_PRACY" 
   (	
      "ID_DEF_PRACY" NUMBER, 
      "NAZWA_PRACY" VARCHAR2(100 BYTE), 
      "JEDNOSTKA" VARCHAR2(100 BYTE), 
      "NORMA_MIN_H" NUMBER, 
      "NORMA_MAX_H" NUMBER, 
      "KOSZT_JEDN_PRACY" NUMBER, 
      "USUNIETY" NUMBER,

      "ZRODLO_DANYCH" NUMBER, 
      "NUMER_PRZYROSTU" NUMBER

   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;

-------------------------------------------------
--  DDL for Table STG_DEF_PRACY_EXT
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_DEF_PRACY_EXT" 
   (
      "ID_DEF_PRACY" NUMBER, 
      "NAZWA_PRACY" VARCHAR2(100 BYTE), 
      "JEDNOSTKA" VARCHAR2(100 BYTE), 
      "NORMA_MIN_H" NUMBER, 
      "NORMA_MAX_H" NUMBER, 
      "KOSZT_JEDN_PRACY" NUMBER, 
      "USUNIETY" NUMBER
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "EXTERNAL_DIR"
      ACCESS PARAMETERS
      ( RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '"' MISSING FIELD VALUES ARE NULL
        (
        ID_DEF_PRACY,NAZWA_PRACY,JEDNOSTKA,NORMA_MIN_H,NORMA_MAX_H,KOSZT_JEDN_PRACY,USUNIETY
        )
        )
      LOCATION
       ( 'DEF_PRACY.csv'
       )
    );
--------------------------------------------------------
--  DDL for Table STG_DEF_ZUZYCIA
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_DEF_ZUZYCIA" 
   (	
      "ID_DEF_ZUZYCIA" NUMBER, 
	"NORMA_MIN_JEDN" NUMBER, 
	"NORMA_MAX_JEDN" NUMBER, 
	"NAZWA_PRACY" VARCHAR2(20 BYTE), 
	"NAZWA_MATERIALU" VARCHAR2(20 BYTE), 
      "USUNIETY" NUMBER,

	"ZRODLO_DANYCH" NUMBER, 
	"NUMER_PRZYROSTU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;

--------------------------------------------------------
--  DDL for Table STG_DEF_ZUZYCIA_EXT
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_DEF_ZUZYCIA_EXT" 
   (
      "ID_DEF_ZUZYCIA" NUMBER, 
	"NORMA_MIN_JEDN" NUMBER, 
	"NORMA_MAX_JEDN" NUMBER, 
	"NAZWA_PRACY" VARCHAR2(20 BYTE), 
	"NAZWA_MATERIALU" VARCHAR2(20 BYTE), 
      "USUNIETY" NUMBER
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "EXTERNAL_DIR"
      ACCESS PARAMETERS
      ( RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '"' MISSING FIELD VALUES ARE NULL
        (
        ID_DEF_ZUZYCIA,NORMA_MIN_JEDN,NORMA_MAX_JEDN,NAZWA_PRACY,NAZWA_MATERIALU,USUNIETY
        )
        )
      LOCATION
       ( 'DEF_ZUZYCIA.csv'
       )
    );
--------------------------------------------------------
--  DDL for Table STG_MATERIAL
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_MATERIAL" 
   (	
      "ID_MATERIALU" NUMBER, 
	"NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
	"JEDNOSTKA" VARCHAR2(100 BYTE), 
	"KOSZT_JEDN" NUMBER, 
      "USUNIETY" NUMBER,

	"ZRODLO_DANYCH" NUMBER, 
      "NUMER_PRZYROSTU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;

--------------------------------------------------------
--  DDL for Table STG_MATERIAL_EXT_1
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_MATERIAL_EXT_1" 
   (
      "ID_MATERIALU" NUMBER, 
	"NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
	"JEDNOSTKA" VARCHAR2(100 BYTE), 
      "USUNIETY" NUMBER
   )  
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "EXTERNAL_DIR"
      ACCESS PARAMETERS
      ( RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '"' MISSING FIELD VALUES ARE NULL
        (
        ID_MATERIALU,NAZWA_MATERIALU,JEDNOSTKA,USUNIETY
        )
        )
      LOCATION
       ( 'MATERIAL_1.csv'
   )  
    );
--------------------------------------------------------
--  DDL for Table STG_MATERIAL_EXT_2
--------------------------------------------------------

    CREATE TABLE "HD2018"."STG_MATERIAL_EXT_2" 
   (
      "ID_MATERIALU" NUMBER, 
	"NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
	"KOSZT_JEDN" NUMBER, 
      "USUNIETY" NUMBER
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "EXTERNAL_DIR"
      ACCESS PARAMETERS
      ( RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '"' MISSING FIELD VALUES ARE NULL
        (
        ID_MATERIALU,NAZWA_MATERIALU,KOSZT_JEDN,USUNIETY
        )
        )
      LOCATION
       ( 'MATERIAL_2.csv'
       )
    );
--------------------------------------------------------
--  DDL for Table STG_PRACA
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_PRACA" 
   (	
      "ID_PRACY" NUMBER, 
	"PESEL_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"DP_PRACY" DATE, 
	"DZ_PRACY" DATE, 
	"NAZWA_PRACY" VARCHAR2(20 BYTE), 
	"KWOTA_PRACOWNIK" NUMBER, 
	"ILOSC" NUMBER, 
	"NAZWA_MATERIALU" VARCHAR2(20 BYTE), 
      "ILOSC_MATERIALU" NUMBER, 
      "USUNIETY" NUMBER,

	"ZRODLO_DANYCH" NUMBER, 
      "NUMER_PRZYROSTU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;

--------------------------------------------------------
--  DDL for Table STG_PRACA_EXT
--------------------------------------------------------

  CREATE TABLE "HD2018"."STG_PRACA_EXT" 
   (
      "ID_PRACY" NUMBER, 
	"PESEL_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"DP_PRACY" DATE, 
	"DZ_PRACY" DATE, 
	"NAZWA_PRACY" VARCHAR2(20 BYTE), 
	"KWOTA_PRACOWNIK" NUMBER, 
	"ILOSC" NUMBER, 
	"NAZWA_MATERIALU" VARCHAR2(20 BYTE), 
      "ILOSC_MATERIALU" NUMBER, 
      "USUNIETY" NUMBER
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "EXTERNAL_DIR"
      ACCESS PARAMETERS
      ( RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '"' MISSING FIELD VALUES ARE NULL
        (
        ID_PRACY,PESEL_PRACOWNIKA,DP_PRACY DATE 'YYYY-MM-DD HH24:MI:SS',DZ_PRACY DATE 'YYYY-MM-DD HH24:MI:SS',NAZWA_PRACY,KWOTA_PRACOWNIK,ILOSC,NAZWA_MATERIALU,ILOSC_MATERIALU,USUNIETY
        )
        )
      LOCATION
       ( 'PRACA.csv'
       )
    );
--------------------------------------------------------
--  DDL for Table STG_PRACOWNIK_1
--------------------------------------------------------

    CREATE TABLE "HD2018"."STG_PRACOWNIK" 
    (	
      "ID_PRACOWNIKA" NUMBER, 
      "IMIE_PRACOWNIKA" VARCHAR2(20 BYTE), 
      "NAZWISKO_PRACOWNIKA" VARCHAR2(20 BYTE), 
      "PESEL_PRACOWNIKA" VARCHAR2(20 BYTE),
      "ADRES" VARCHAR2(60 BYTE),
      "USUNIETY" NUMBER,

	"ZRODLO_DANYCH" NUMBER, 
	"NUMER_PRZYROSTU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table STG_PRACOWNIK_EXT
--------------------------------------------------------

    CREATE TABLE "HD2018"."STG_PRACOWNIK_EXT_1" 
    (	
      "ID_PRACOWNIKA" NUMBER, 
	"IMIE_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"NAZWISKO_PRACOWNIKA" VARCHAR2(20 BYTE), 
	"PESEL_PRACOWNIKA" VARCHAR2(20 BYTE), 
      "USUNIETY" NUMBER
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "EXTERNAL_DIR"
      ACCESS PARAMETERS
      ( RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '"' MISSING FIELD VALUES ARE NULL
        (
        ID_PRACOWNIKA,IMIE_PRACOWNIKA,NAZWISKO_PRACOWNIKA,PESEL_PRACOWNIKA,USUNIETY
        )
        )
      LOCATION
       ( 'PRACOWNIK_1.csv'
       )
    );
--------------------------------------------------------
--  DDL for Table STG_PRACOWNIK_EXT
--------------------------------------------------------

    CREATE TABLE "HD2018"."STG_PRACOWNIK_EXT_2" 
    (	
      "ID_PRACOWNIKA" NUMBER, 
      "PESEL_PRACOWNIKA" VARCHAR2(20 BYTE),
      "ADRES" VARCHAR2(60 BYTE),
      "USUNIETY" NUMBER
   ) 
   ORGANIZATION EXTERNAL 
    ( TYPE ORACLE_LOADER
      DEFAULT DIRECTORY "EXTERNAL_DIR"
      ACCESS PARAMETERS
      ( RECORDS DELIMITED BY NEWLINE
        FIELDS TERMINATED BY ';' OPTIONALLY ENCLOSED BY '"' MISSING FIELD VALUES ARE NULL
        (
        ID_PRACOWNIKA,PESEL_PRACOWNIKA,ADRES,USUNIETY
        )
        )
      LOCATION
       ( 'PRACOWNIK_2.csv'
       )
    );
--------------------------------------------------------
--  DDL for Table TMP_DEF_PRACY
--------------------------------------------------------

  CREATE TABLE "HD2018"."TMP_DEF_PRACY" 
   (	
      "ID_DEF_PRACY" NUMBER, 
      "NAZWA_PRACY" VARCHAR2(100 BYTE), 
      "JEDNOSTKA" VARCHAR2(100 BYTE), 
      "NORMA_MIN_H" NUMBER, 
      "NORMA_MAX_H" NUMBER, 
      "KOSZT_JEDN_PRACY" NUMBER,
      "USUNIETY" NUMBER,
      "ZRODLO_DANYCH" NUMBER,
      "NUMER_PRZYROSTU" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table TMP_DEF_ZUZYCIA
--------------------------------------------------------

  CREATE TABLE "HD2018"."TMP_DEF_ZUZYCIA" 
   (	
      "ID_DEF_ZUZYCIA" VARCHAR2(20 BYTE), 
      "NORMA_MIN_JEDN" NUMBER, 
      "NORMA_MAX_JEDN" NUMBER, 
      "CHD_ID_DEF_PRACY" NUMBER, 
      "NAZWA_PRACY" VARCHAR2(20 BYTE), 
      "CHD_ID_MATERIALU" NUMBER, 
      "NAZWA_MATERIALU" VARCHAR2(20 BYTE),
      "USUNIETY" NUMBER,
      "ZRODLO_DANYCH" NUMBER,
      "NUMER_PRZYROSTU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table TMP_MATERIAL
--------------------------------------------------------

  CREATE TABLE "HD2018"."TMP_MATERIAL" 
   (	
      "ID_MATERIALU" NUMBER, 
      "NAZWA_MATERIALU" VARCHAR2(100 BYTE), 
      "JEDNOSTKA" VARCHAR2(100 BYTE), 
      "KOSZT_JEDN" NUMBER,
      "USUNIETY" NUMBER,
      "ZRODLO_DANYCH" NUMBER,
      "NUMER_PRZYROSTU" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table TMP_PRACA
--------------------------------------------------------

  CREATE TABLE "HD2018"."TMP_PRACA" 
   (	
      "ID_PRACY" NUMBER, 
	    "CHD_ID_PRACOWNIKA" NUMBER, 
      "PESEL_PRACOWNIKA" VARCHAR2(20 BYTE),
	    "DP_PRACY" DATE, 
	    "DZ_PRACY" DATE, 
	    "CHD_ID_DEF_PRACY" VARCHAR2(20 BYTE), 
	    "NAZWA_PRACY" VARCHAR2(20 BYTE), 
      "KWOTA_PRACOWNIK" NUMBER, 
      "ILOSC" NUMBER, 
      "CHD_ID_MATERIALU" NUMBER, 
      "NAZWA_MATERIALU" VARCHAR2(20 BYTE), 
	    "ILOSC_MATERIALU" NUMBER,
  	  "USUNIETY" NUMBER,
	    "ZRODLO_DANYCH" NUMBER,
      "NUMER_PRZYROSTU" NUMBER
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;
--------------------------------------------------------
--  DDL for Table TMP_PRACOWNIK
--------------------------------------------------------

  CREATE TABLE "HD2018"."TMP_PRACOWNIK" 
   (
      "ID_PRACOWNIKA" NUMBER, 
      "IMIE_PRACOWNIKA" VARCHAR2(20 BYTE), 
      "NAZWISKO_PRACOWNIKA" VARCHAR2(20 BYTE), 
      "PESEL_PRACOWNIKA" VARCHAR2(20 BYTE),
      "ADRES" VARCHAR2(60 BYTE),
      "USUNIETY" NUMBER,
      "ZRODLO_DANYCH" NUMBER,
      "NUMER_PRZYROSTU" NUMBER
   ) 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;

Insert into HD2018.META_DATA (NAZWA,NUMER_OST_ZAL_PRZYROSTU) values ('MATERIAL',null);
Insert into HD2018.META_DATA (NAZWA,NUMER_OST_ZAL_PRZYROSTU) values ('PRACOWNIK',null);
Insert into HD2018.META_DATA (NAZWA,NUMER_OST_ZAL_PRZYROSTU) values ('DEF_ZUZYCIA',null);
Insert into HD2018.META_DATA (NAZWA,NUMER_OST_ZAL_PRZYROSTU) values ('PRACA',null);
Insert into HD2018.META_DATA (NAZWA,NUMER_OST_ZAL_PRZYROSTU) values ('DEF_PRACY',null);


--------------------------------
--Sciezka do CSV----------------
--------------------------------
CREATE OR REPLACE DIRECTORY EXTERNAL_DIR AS 'F:\TEMP';


--------------------------------------------------------
--  File created - ≈õroda-maja-30-2018   
--------------------------------------------------------

--------------------------------------------------------
--  DDL for Sequence STG_DEF_PRACY_D_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "STG_DEF_PRACY_D_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STG_DEF_PRACY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "STG_DEF_PRACY_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STG_DEF_PRACY_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "STG_DEF_ZUZYCIA_D_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STG_DEF_ZUZYCIA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "STG_DEF_ZUZYCIA_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence STG_MATERIAL_D_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "STG_MATERIAL_D_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STG_MATERIAL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "STG_MATERIAL_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence STG_PRACA_D_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "STG_PRACA_D_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence STG_PRACA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "STG_PRACA_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence TMP_DEF_ZUZYCIA_BAD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TMP_DEF_ZUZYCIA_BAD_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence TMP_PRACA_BAD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TMP_PRACA_BAD_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
   
--------------------------------------------------------
--  DDL for Sequence TMP_DEF_PRACY
--------------------------------------------------------

	CREATE SEQUENCE  "TMP_DEF_PRACY_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
	
--------------------------------------------------------
--  DDL for Sequence TMP_DEF_ZUZYCIA
--------------------------------------------------------

	CREATE SEQUENCE  "TMP_DEF_ZUZYCIA_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
	
--------------------------------------------------------
--  DDL for Sequence TMP_MATERIAL
--------------------------------------------------------

	CREATE SEQUENCE  "TMP_MATERIAL_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
	
--------------------------------------------------------
--  DDL for Sequence TMP_PRACA
--------------------------------------------------------

	CREATE SEQUENCE  "TMP_PRACA_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

--------------------------------------------------------
--  DDL for Sequence TMP_PRACOWNIK
--------------------------------------------------------

	CREATE SEQUENCE  "TMP_PRACOWNIK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;


--------------------------------
--PROCEDURA LOAD_CSV------------
--------------------------------
create or replace PROCEDURE "LOAD_FROM_CSV" AS 
last_increase NUMBER;
BEGIN   
    last_increase := PRZYROST_SEQ.nextVal;

    FOR rec IN (SELECT NAZWA, PLIK_CSV, ZRODLO_DANYCH, KOLUMNY, TABELA_DOCELOWA FROM META_DATA_STG_EXT)
    LOOP
        EXECUTE IMMEDIATE 'ALTER TABLE ' || rec.NAZWA || ' LOCATION (''' || rec.PLIK_CSV || ''')';

        EXECUTE IMMEDIATE 'INSERT INTO ' || rec.TABELA_DOCELOWA || ' (' || rec.KOLUMNY || ',ZRODLO_DANYCH,NUMER_PRZYROSTU)
        SELECT ' || rec.KOLUMNY || ',' || rec.ZRODLO_DANYCH || ',' || last_increase || 
        ' FROM ' || rec.NAZWA;
    END LOOP;

END LOAD_FROM_CSV;

/


--------------------------------
--PROCEDURA LOAD_STG------------
--------------------------------
create or replace PROCEDURE "LOAD_FROM_STG" AS 
BEGIN   
    FOR m_row IN (SELECT NAZWA,KOLUMNY,KOLUMNY_REC,TABELA_DOCELOWA,TABELA_DOCELOWA_KOLUMNY,TABELA_DOCELOWA_CZY_ISTNIEJE,TABELA_DOCELOWA_KOLUMNY_REC FROM META_DATA_STG)
    LOOP
            EXECUTE IMMEDIATE '
                DECLARE 
                    l_exst NUMBER;
                BEGIN
                FOR rec IN (SELECT ' || m_row.KOLUMNY || 
                    ' FROM ' || m_row.NAZWA || ' ORDER BY NUMER_PRZYROSTU)
                    LOOP
                        SELECT CASE WHEN EXISTS ( SELECT * FROM ' || m_row.TABELA_DOCELOWA || ' WHERE ' || m_row.TABELA_DOCELOWA_CZY_ISTNIEJE || ') THEN 1 ELSE 0 END  INTO l_exst FROM SYS.DUAL;
                        if l_exst = 1 
                        then 
                            UPDATE ' || m_row.TABELA_DOCELOWA || ' SET ' || m_row.TABELA_DOCELOWA_KOLUMNY_REC || ' 
                            WHERE ' || m_row.TABELA_DOCELOWA_CZY_ISTNIEJE || ';
                        else 
                            INSERT INTO ' || m_row.TABELA_DOCELOWA || '(' || m_row.TABELA_DOCELOWA_KOLUMNY || ')
                                VALUES(' || m_row.KOLUMNY_REC || ');
                        end if;
                    END LOOP;
                    END;';            
    END LOOP;
END LOAD_FROM_STG;

/

--------------------------------
--PROCEDURA LOAD_TMP------------
--------------------------------
create or replace PROCEDURE "LOAD_FROM_TMP" AS 
l_exst NUMBER;
BEGIN   

    FOR rec in (SELECT ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY, ZRODLO_DANYCH, USUNIETY, NUMER_PRZYROSTU FROM TMP_DEF_PRACY ORDER BY NUMER_PRZYROSTU)
    LOOP
        
        SELECT CASE WHEN EXISTS ( SELECT * FROM CHD_DEF_PRACY WHERE NAZWA_PRACY = rec.NAZWA_PRACY) THEN 1 ELSE 0 END  INTO l_exst FROM SYS.DUAL;
    
        IF rec.USUNIETY = 0 then
            IF l_exst = 0 then
                DBMS_OUTPUT.PUT_LINE('DO INSERTU');
                --INSERT INTO CHD_DEF_PRACY
            ELSE 
                DBMS_OUTPUT.PUT_LINE('DO UPDATE');
            END IF;
        ELSE
            IF l_exst = 0 then
                DBMS_OUTPUT.PUT_LINE('DO IGNOROWANIA');
            ELSE 
                DBMS_OUTPUT.PUT_LINE('DO USUNIECIA');
            END IF;
        END IF;
    END LOOP;
    
END LOAD_FROM_TMP;

/

--------------------------------------------------------
--  DDL for Procedure CLEAR_DATA
--------------------------------------------------------

  CREATE OR REPLACE PROCEDURE "CLEAR_DATA" AS 
BEGIN
  DELETE FROM CHD_PRACA;
  DELETE FROM CHD_DEF_ZUZYCIA;
  DELETE FROM CHD_DEF_PRACY;
  DELETE FROM CHD_MATERIAL;
  DELETE FROM CHD_PRACOWNIK;
  DELETE FROM META_DATA;
  DELETE FROM STG_DEF_PRACY;
  DELETE FROM STG_DEF_PRACY_D;
  DELETE FROM STG_DEF_ZUZYCIA;
  DELETE FROM STG_DEF_ZUZYCIA_D;
  DELETE FROM STG_MATERIAL;
  DELETE FROM STG_MATERIAL_D;
  DELETE FROM STG_PRACA;
  DELETE FROM STG_PRACA_D;
  DELETE FROM TMP_DEF_ZUZYCIA_BAD;
  DELETE FROM TMP_PRACA_BAD;
  
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('MATERIAL',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACOWNIK',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_ZUZYCIA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_PRACY',0,0);
  
END CLEAR_DATA;

/


------------------
---LOAD TO TMP----
------------------
create or replace procedure "LOAD_TO_TMP" as
last_increase NUMBER;
BEGIN
SELECT NUMER_OST_PRZYROSTU INTO last_increase FROM META_DATA WHERE NAZWA='MATERIAL';
last_increase := last_increase +1;
FOR rec IN(SELECT ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY FROM STG_MATERIAL WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_MATERIAL(ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_MATERIALU, rec.NAZWA_MATERIALU, rec.JEDNOSTKA, rec.KOSZT_JEDN, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY FROM STG_DEF_PRACY WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_DEF_PRACY(ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_DEF_PRACY, rec.NAZWA_PRACY, rec.JEDNOSTKA, rec.NORMA_MIN_H, rec.NORMA_MAX_H, rec.KOSZT_JEDN_PRACY,rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY FROM STG_PRACA WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_PRACOWNIK(IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.IMIE_PRACOWNIKA, rec.NAZWISKO_PRACOWNIKA, rec.PESEL_PRACOWNIKA, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

--Tu odpalamy ETL dla tych co dodali≈õmy, USUWANIE PRACOWNIKA PO SPRAWDZENIU CZY NIE JEST PRZYPISANY DO ≈ªADNEJ PRACY WIƒòC ODDZIELNA PROCEDURA NA SAMYM KONCU ETL--

-- KOLEJNE ≈ÅADOWANIA PO ETLkach, SZUKANIE ID W TABELACH KLUCZY TYCH DODANYCH--


END;
  DELETE FROM STG_PRACA_D;
  DELETE FROM TMP_DEF_ZUZYCIA_BAD;
  DELETE FROM TMP_PRACA_BAD;
  
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('MATERIAL',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACOWNIK',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_ZUZYCIA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_PRACY',0,0);
  
END CLEAR_DATA;

/


------------------
---LOAD TO TMP----
------------------
create or replace procedure "LOAD_TO_TMP" as
last_increase NUMBER;
BEGIN
SELECT NUMER_OST_PRZYROSTU INTO last_increase FROM META_DATA WHERE NAZWA='MATERIAL';
last_increase := last_increase +1;
FOR rec IN(SELECT ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY FROM STG_MATERIAL WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_MATERIAL(ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_MATERIALU, rec.NAZWA_MATERIALU, rec.JEDNOSTKA, rec.KOSZT_JEDN, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY FROM STG_DEF_PRACY WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_DEF_PRACY(ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_DEF_PRACY, rec.NAZWA_PRACY, rec.JEDNOSTKA, rec.NORMA_MIN_H, rec.NORMA_MAX_H, rec.KOSZT_JEDN_PRACY,rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY FROM STG_PRACA WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_PRACOWNIK(IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.IMIE_PRACOWNIKA, rec.NAZWISKO_PRACOWNIKA, rec.PESEL_PRACOWNIKA, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

--Tu odpalamy ETL dla tych co dodali≈õmy, USUWANIE PRACOWNIKA PO SPRAWDZENIU CZY NIE JEST PRZYPISANY DO ≈ªADNEJ PRACY WIƒòC ODDZIELNA PROCEDURA NA SAMYM KONCU ETL--

-- KOLEJNE ≈ÅADOWANIA PO ETLkach, SZUKANIE ID W TABELACH KLUCZY TYCH DODANYCH--


END;
  DELETE FROM STG_PRACA;
  DELETE FROM STG_PRACA_D;
  DELETE FROM TMP_DEF_ZUZYCIA_BAD;
  DELETE FROM TMP_PRACA_BAD;
  
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('MATERIAL',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACOWNIK',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_ZUZYCIA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_PRACY',0,0);
  
END CLEAR_DATA;

/


------------------
---LOAD TO TMP----
------------------
create or replace procedure "LOAD_TO_TMP" as
last_increase NUMBER;
BEGIN
SELECT NUMER_OST_PRZYROSTU INTO last_increase FROM META_DATA WHERE NAZWA='MATERIAL';
last_increase := last_increase +1;
FOR rec IN(SELECT ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY FROM STG_MATERIAL WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_MATERIAL(ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_MATERIALU, rec.NAZWA_MATERIALU, rec.JEDNOSTKA, rec.KOSZT_JEDN, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY FROM STG_DEF_PRACY WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_DEF_PRACY(ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_DEF_PRACY, rec.NAZWA_PRACY, rec.JEDNOSTKA, rec.NORMA_MIN_H, rec.NORMA_MAX_H, rec.KOSZT_JEDN_PRACY,rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY FROM STG_PRACA WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_PRACOWNIK(IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.IMIE_PRACOWNIKA, rec.NAZWISKO_PRACOWNIKA, rec.PESEL_PRACOWNIKA, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

--Tu odpalamy ETL dla tych co dodali≈õmy, USUWANIE PRACOWNIKA PO SPRAWDZENIU CZY NIE JEST PRZYPISANY DO ≈ªADNEJ PRACY WIƒòC ODDZIELNA PROCEDURA NA SAMYM KONCU ETL--

-- KOLEJNE ≈ÅADOWANIA PO ETLkach, SZUKANIE ID W TABELACH KLUCZY TYCH DODANYCH--


END;
  DELETE FROM STG_PRACA_D;
  DELETE FROM TMP_DEF_ZUZYCIA_BAD;
  DELETE FROM TMP_PRACA_BAD;
  
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('MATERIAL',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACOWNIK',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_ZUZYCIA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('PRACA',0,0);
  INSERT INTO META_DATA(NAZWA,NUMER_OST_ZAL_PRZYROSTU,NUMER_OST_PRZYROSTU) VALUES('DEF_PRACY',0,0);
  
END CLEAR_DATA;

/


------------------
---LOAD TO TMP----
------------------
create or replace procedure "LOAD_TO_TMP" as
last_increase NUMBER;
BEGIN
SELECT NUMER_OST_PRZYROSTU INTO last_increase FROM META_DATA WHERE NAZWA='MATERIAL';
last_increase := last_increase +1;
FOR rec IN(SELECT ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY FROM STG_MATERIAL WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_MATERIAL(ID_MATERIALU, NAZWA_MATERIALU, JEDNOSTKA, KOSZT_JEDN, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_MATERIALU, rec.NAZWA_MATERIALU, rec.JEDNOSTKA, rec.KOSZT_JEDN, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY FROM STG_DEF_PRACY WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_DEF_PRACY(ID_DEF_PRACY, NAZWA_PRACY, JEDNOSTKA, NORMA_MIN_H, NORMA_MAX_H, KOSZT_JEDN_PRACY,ZRODLO_DANYCH, USUNIETY)
VALUES(rec.ID_DEF_PRACY, rec.NAZWA_PRACY, rec.JEDNOSTKA, rec.NORMA_MIN_H, rec.NORMA_MAX_H, rec.KOSZT_JEDN_PRACY,rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

FOR rec IN(SELECT IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY FROM STG_PRACA WHERE NUMER_PRZYROSTU=last_increase)
LOOP
INSERT INTO TMP_PRACOWNIK(IMIE_PRACOWNIKA, NAZWISKO_PRACOWNIKA, PESEL_PRACOWNIKA, ZRODLO_DANYCH, USUNIETY)
VALUES(rec.IMIE_PRACOWNIKA, rec.NAZWISKO_PRACOWNIKA, rec.PESEL_PRACOWNIKA, rec.ZRODLO_DANYCH, rec.USUNIETY);
END LOOP;

--Tu odpalamy ETL dla tych co dodali≈õmy, USUWANIE PRACOWNIKA PO SPRAWDZENIU CZY NIE JEST PRZYPISANY DO ≈ªADNEJ PRACY WIƒòC ODDZIELNA PROCEDURA NA SAMYM KONCU ETL--

-- KOLEJNE ≈ÅADOWANIA PO ETLkach, SZUKANIE ID W TABELACH KLUCZY TYCH DODANYCH--


END;

/




CREATE TABLE "HD2018"."META_DATA_STG" 
   (	
        "NAZWA" VARCHAR2(50 BYTE), 
        "KOLUMNY" VARCHAR2(500 BYTE),
        "KOLUMNY_REC" VARCHAR2(500 BYTE),
        "TABELA_DOCELOWA"  VARCHAR2(50 BYTE),
        "TABELA_DOCELOWA_KOLUMNY" VARCHAR2(500 BYTE),
        "TABELA_DOCELOWA_CZY_ISTNIEJE" VARCHAR2(200 BYTE),
        "TABELA_DOCELOWA_KOLUMNY_REC" VARCHAR2(500 BYTE)
   )  
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT )
  TABLESPACE "DATA" ;

INSERT INTO META_DATA_STG(NAZWA, KOLUMNY, KOLUMNY_REC, TABELA_DOCELOWA, TABELA_DOCELOWA_KOLUMNY, TABELA_DOCELOWA_CZY_ISTNIEJE, TABELA_DOCELOWA_KOLUMNY_REC) 
VALUES ('STG_DEF_PRACY', 'ID_DEF_PRACY,NAZWA_PRACY,JEDNOSTKA,NORMA_MIN_H,NORMA_MAX_H,KOSZT_JEDN_PRACY,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 
  'rec.ID_DEF_PRACY,rec.NAZWA_PRACY,rec.JEDNOSTKA,rec.NORMA_MIN_H,rec.NORMA_MAX_H,rec.KOSZT_JEDN_PRACY,rec.USUNIETY,rec.ZRODLO_DANYCH,rec.NUMER_PRZYROSTU',
  'TMP_DEF_PRACY', 'ID_DEF_PRACY,NAZWA_PRACY,JEDNOSTKA,NORMA_MIN_H,NORMA_MAX_H,KOSZT_JEDN_PRACY,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 'NAZWA_PRACY = rec.NAZWA_PRACY',
  'JEDNOSTKA=rec.JEDNOSTKA,NORMA_MIN_H=rec.NORMA_MIN_H,NORMA_MAX_H=rec.NORMA_MAX_H,KOSZT_JEDN_PRACY=rec.KOSZT_JEDN_PRACY,USUNIETY=rec.USUNIETY,ZRODLO_DANYCH=rec.ZRODLO_DANYCH,NUMER_PRZYROSTU=rec.NUMER_PRZYROSTU'
  );

INSERT INTO META_DATA_STG(NAZWA, KOLUMNY, KOLUMNY_REC, TABELA_DOCELOWA, TABELA_DOCELOWA_KOLUMNY, TABELA_DOCELOWA_CZY_ISTNIEJE, TABELA_DOCELOWA_KOLUMNY_REC) 
VALUES ('STG_MATERIAL', 'ID_MATERIALU,NAZWA_MATERIALU,JEDNOSTKA,KOSZT_JEDN,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 
  'rec.ID_MATERIALU,rec.NAZWA_MATERIALU,rec.JEDNOSTKA,rec.KOSZT_JEDN,rec.USUNIETY,rec.ZRODLO_DANYCH,rec.NUMER_PRZYROSTU',
  'TMP_MATERIAL', 'ID_MATERIALU,NAZWA_MATERIALU,JEDNOSTKA,KOSZT_JEDN,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 'NAZWA_MATERIALU=rec.NAZWA_MATERIALU and ZRODLO_DANYCH=rec.ZRODLO_DANYCH',
  'JEDNOSTKA=rec.JEDNOSTKA,KOSZT_JEDN=rec.KOSZT_JEDN,USUNIETY=rec.USUNIETY,ZRODLO_DANYCH=rec.ZRODLO_DANYCH,NUMER_PRZYROSTU=rec.NUMER_PRZYROSTU'
  );

INSERT INTO META_DATA_STG(NAZWA, KOLUMNY, KOLUMNY_REC, TABELA_DOCELOWA, TABELA_DOCELOWA_KOLUMNY, TABELA_DOCELOWA_CZY_ISTNIEJE, TABELA_DOCELOWA_KOLUMNY_REC) 
VALUES ('STG_PRACOWNIK', 'ID_PRACOWNIKA,IMIE_PRACOWNIKA,NAZWISKO_PRACOWNIKA,PESEL_PRACOWNIKA,ADRES,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 
  'rec.ID_PRACOWNIKA,rec.IMIE_PRACOWNIKA,rec.NAZWISKO_PRACOWNIKA,rec.PESEL_PRACOWNIKA,rec.ADRES,rec.USUNIETY,rec.ZRODLO_DANYCH,rec.NUMER_PRZYROSTU',
  'TMP_PRACOWNIK', 'ID_PRACOWNIKA,IMIE_PRACOWNIKA,NAZWISKO_PRACOWNIKA,PESEL_PRACOWNIKA,ADRES,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 'PESEL_PRACOWNIKA=rec.PESEL_PRACOWNIKA and ZRODLO_DANYCH=rec.ZRODLO_DANYCH',
  'IMIE_PRACOWNIKA=rec.IMIE_PRACOWNIKA,NAZWISKO_PRACOWNIKA=rec.NAZWISKO_PRACOWNIKA,ADRES=rec.ADRES,USUNIETY=rec.USUNIETY,ZRODLO_DANYCH=rec.ZRODLO_DANYCH,NUMER_PRZYROSTU=rec.NUMER_PRZYROSTU'
  );

INSERT INTO META_DATA_STG(NAZWA, KOLUMNY, KOLUMNY_REC, TABELA_DOCELOWA, TABELA_DOCELOWA_KOLUMNY, TABELA_DOCELOWA_CZY_ISTNIEJE, TABELA_DOCELOWA_KOLUMNY_REC) 
VALUES ('STG_PRACA', 'ID_PRACY,PESEL_PRACOWNIKA,DP_PRACY,DZ_PRACY,NAZWA_PRACY,KWOTA_PRACOWNIK,ILOSC,NAZWA_MATERIALU,ILOSC_MATERIALU,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 
  'rec.ID_PRACY,rec.PESEL_PRACOWNIKA,rec.DP_PRACY,rec.DZ_PRACY,rec.NAZWA_PRACY,rec.KWOTA_PRACOWNIK,rec.ILOSC,rec.NAZWA_MATERIALU,rec.ILOSC_MATERIALU,rec.USUNIETY,rec.ZRODLO_DANYCH,rec.NUMER_PRZYROSTU',
  'TMP_PRACA', 'ID_PRACY,PESEL_PRACOWNIKA,DP_PRACY,DZ_PRACY,NAZWA_PRACY,KWOTA_PRACOWNIK,ILOSC,NAZWA_MATERIALU,ILOSC_MATERIALU,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 
  'PESEL_PRACOWNIKA=rec.PESEL_PRACOWNIKA and NAZWA_PRACY=rec.NAZWA_PRACY and NAZWA_MATERIALU=rec.NAZWA_MATERIALU',
  'DP_PRACY=rec.DP_PRACY,DZ_PRACY=rec.DZ_PRACY,KWOTA_PRACOWNIK=rec.KWOTA_PRACOWNIK,ILOSC=rec.ILOSC,ILOSC_MATERIALU=rec.ILOSC_MATERIALU,USUNIETY=rec.USUNIETY,ZRODLO_DANYCH=rec.ZRODLO_DANYCH,NUMER_PRZYROSTU=rec.NUMER_PRZYROSTU'
  );

INSERT INTO META_DATA_STG(NAZWA, KOLUMNY, KOLUMNY_REC, TABELA_DOCELOWA, TABELA_DOCELOWA_KOLUMNY, TABELA_DOCELOWA_CZY_ISTNIEJE, TABELA_DOCELOWA_KOLUMNY_REC) 
VALUES ('STG_DEF_ZUZYCIA', 'ID_DEF_ZUZYCIA,NORMA_MIN_JEDN,NORMA_MAX_JEDN,NAZWA_PRACY,NAZWA_MATERIALU,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 
  'rec.ID_DEF_ZUZYCIA,rec.NORMA_MIN_JEDN,rec.NORMA_MAX_JEDN,rec.NAZWA_PRACY,rec.NAZWA_MATERIALU,rec.USUNIETY,rec.ZRODLO_DANYCH,rec.NUMER_PRZYROSTU',
  'TMP_DEF_ZUZYCIA', 'ID_DEF_ZUZYCIA,NORMA_MIN_JEDN,NORMA_MAX_JEDN,NAZWA_PRACY,NAZWA_MATERIALU,USUNIETY,ZRODLO_DANYCH,NUMER_PRZYROSTU', 
  'NAZWA_PRACY=rec.NAZWA_PRACY and NAZWA_MATERIALU=rec.NAZWA_MATERIALU',
  'NORMA_MIN_JEDN=rec.NORMA_MIN_JEDN,NORMA_MAX_JEDN=rec.NORMA_MAX_JEDN,USUNIETY=rec.USUNIETY,ZRODLO_DANYCH=rec.ZRODLO_DANYCH,NUMER_PRZYROSTU=rec.NUMER_PRZYROSTU'
  );



create or replace TRIGGER TMP_DEF_PRACY_SEQ_AUTO_INC 
BEFORE INSERT ON TMP_DEF_PRACY 
FOR EACH ROW

BEGIN
  SELECT TMP_DEF_PRACY_SEQ.NEXTVAL
  INTO   :new.ID_DEF_PRACY
  FROM   dual;
END;